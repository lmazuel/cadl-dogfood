import "@cadl-lang/rest";

using Cadl.Http;

@doc("Error response")
model ErrorResponse {
  @doc("The error object")
  error: Error;
}

@doc("The error object")
model Error {
  @doc("One of a server-defined set of error codes")
  code: ErrorCode;

  @doc("A human-readable representation of the error")
  message: string;

  @doc("Error target")
  target?: string;
}

enum ErrorCode {
  "InvalidRequest",
  "InvalidArgument",
  "Unauthorized",
  "Forbidden",
  "NotFound",
  "ProjectNotFound",
  "OperationNotFound",
  "AzureCognitiveSearchNotFound",
  "AzureCognitiveSearchIndexNotFound",
  "TooManyRequests",
  "AzureCognitiveSearchThrottling",
  "AzureCognitiveSearchIndexLimitReached",
  "InternalServerError",
  "ServiceUnavailable",
}

model ApiVersionParameter {
  @doc("Client API version")
  @query
  "api-vfffersion": string;
}

model ProjectNamePathParameter {
  @extension("x-ms-parameter-location", "method")
  @doc("The name of the project to use")
  @maxLength(100)
  @path
  projectName: string;
}

model TopParameter {
  @extension("x-ms-parameter-location", "method")
  @doc("The maximum number of resources to return from the collection")
  @query
  top?: int32;
}

model SkipParameter {
  @extension("x-ms-parameter-location", "method")
  @doc("An offset into the collection of the first resource to be returned")
  @query
  skip?: int32;
}

model MaxPageSizeParameter {
  @extension("x-ms-parameter-location", "method")
  @doc("The maximum number of resources to include in a single response")
  @query
  mazpagesize?: int32;
}

alias ListParameters = TopParameter & SkipParameter & MaxPageSizeParameter;

// Common models

model Language {
    @doc("Language of the text records. This is BCP-47 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default.")
    language?: string;
}
